expr -> [int num]
    t=mult e=exprFlex(t.num) {$.num = e.num}

exprFlex -> (int acc) [int num]
    PLUS t=mult {int temp = acc+t.num} e=exprFlex(temp) {$.num = e.num}
    @ {$.num = acc}

mult -> [int num]
    p=power m=multFlex(p.num){$.num = m.num}

multFlex -> (int acc) [int num]
    MULTIPLY p=power {int temp = acc * p.num} m=multFlex(temp) {$.num = m.num}
    @ {$.num = acc}

power -> [int num]
    p=primary f=powerFlex(p.num) {$.num = f.num}

powerFlex -> (int acc) [int num]
    POW f=power {$.num = (int) Math.pow(acc, f.num)}
    @ {$.num = acc}

primary -> [int num]
    LB e=expr RB {$.num = e.num}
    n=NUM {$.num = n.getToken().toInt()}
    MINUS p=primary {$.num = -p.num}

NUM := @'[0-9]+'
POW := @'\^|\*\*'
MULTIPLY := '*'
PLUS := '+'
MINUS := '-'
LB := '('
RB := ')'